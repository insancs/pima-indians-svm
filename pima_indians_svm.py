# -*- coding: utf-8 -*-
"""pima-indians-svm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/171ChwBTzwuj2iJGNGn9qYea_LE3OFjUg

## Dataset 
https://www.kaggle.com/uciml/pima-indians-diabetes-database
"""

import pandas as pd

# Load dataset
df = pd.read_csv('diabetes.csv')

# Print top 5 rows
df.head()

# Display dataset information
df.info()

"""## Splitting attribute and label"""

# Separating attributes
X = df[df.columns[:8]]

# Separating label
y = df['Outcome']

"""## Rescaling

Jika kita lihat, nilai-nilai pada dataset memiliki skala yang berbeda. Contohnya pada kolom Glucose dan kolom Diabetes Pedigree Function. Kita perlu mengubah nilai-nilai dari setiap atribut berada pada skala yang sama. Kita dapat mencoba menggunakan standarisasi dengan fungsi StandardScaler() dari SKLearn.
"""

from sklearn.preprocessing import StandardScaler

# standardization of data set values
scaler = StandardScaler()


scaler.fit(X)
X = scaler.transform(X)

X

"""## Splitting data train and data test"""

from sklearn.model_selection import train_test_split
 
# Separate training data and test data
X_train, X_test, y_train, y_tesst = train_test_split(X, y, test_size=0.33, random_state=42)

"""## Build SVM Model

Kita kemudian membuat objek Support Vector Classifier dan menampungnya pada variabel clf. Akhirnya kita sampai pada tahapan yang kita tunggu-tunggu, kita memanggil fungsi fit untuk melatih model.
"""

from sklearn.svm import SVC

# create SVC object and call fit function to train model
clf = SVC()
clf.fit(X_train, y_train)

# Show accuracy score  
clf.score(X_test, y_test)